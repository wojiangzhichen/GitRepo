import numpy as np

Class Network(object):
    def __init__(self,sizes):
        self.num_layers = len(sizes)
        self.sizes = sizes
        self.biases = [np.random.randn(y,1) for y in sizes[1:]]
        self.weights = [np.random.randn(y,x)
                        for x,y in zip(sizes[:-1], sizes[1:])]

# sizes: number of neurons at each layer, for example,
# 2 at first layer, 3 at second layer
net = Network([2, 3, ,1])

# net.weights[1] stores the weights from layer 2 to layer 3
bias =  = [np.random.randn(y,1) for y in sizes[1:]]
print("bias",bias)
for x, y in zip(sizes[:-1], sizes[1:]):
    print(x, y)
    
net = Network([2, 3, 1])
print(net.num_layers)
